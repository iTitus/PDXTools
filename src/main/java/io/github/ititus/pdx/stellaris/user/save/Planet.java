package io.github.ititus.pdx.stellaris.user.save;

import io.github.ititus.pdx.pdxscript.IPdxScript;
import io.github.ititus.pdx.pdxscript.PdxScriptObject;
import org.eclipse.collections.api.list.ImmutableList;
import org.eclipse.collections.api.list.primitive.ImmutableBooleanList;
import org.eclipse.collections.api.list.primitive.ImmutableIntList;
import org.eclipse.collections.api.map.ImmutableMap;
import org.eclipse.collections.api.map.primitive.ImmutableIntIntMap;
import org.eclipse.collections.api.map.primitive.ImmutableObjectDoubleMap;

import java.time.LocalDate;

public class Planet {

    public final String name;
    public final boolean customName;
    public final String planetClass;
    public final String entityPlanetClass;
    public final Coordinate coordinate;
    public final double orbit;
    public final int planetSize;
    public final int bombardmentDamage;
    public final LocalDate lastBombardment;
    public final boolean automatedDevelopment;
    public final ImmutableIntList moons;
    public final boolean planetClassChanged;
    public final int owner;
    public final int branchOfficeOwner;
    public final int originalOwner;
    public final int terraformedBy;
    public final int controller;
    public final int moonOf;
    public final boolean isMoon;
    public final boolean hasRing;
    public final String anomaly;
    public final ImmutableIntList pops;
    public final ImmutableIntList buildings;
    public final ImmutableIntList branchOfficeBuildings;
    public final ImmutableList<String> districts;
    public final String lastBuildingChanged;
    public final String lastDistrictChanged;
    public final boolean is_under_colonization;
    public final LocalDate colonizeDate;
    public final LocalDate killPop;
    public final int buildQueue;
    public final int armyBuildQueue;
    public final int branchOfficeBuildQueue;
    public final ImmutableIntIntMap planetOrbitals;
    public final ImmutableIntList armies;
    public final DelayedEvent delayedEvent;
    public final ImmutableList<TimedModifier> timedModifiers;
    public final int shipClassOrbitalStation;
    public final ImmutableMap<String, FlagData> flags;
    public final int entity;
    public final String entityName;
    public final String picture;
    public final boolean isTerraformed;
    public final TerraformProcess terraformProcess;
    public final ImmutableList<String> planetModifiers;
    public final int surveyedBy;
    public final boolean surveyed;
    public final boolean preventAnomaly;
    public final boolean triggerMegastructureIcon;
    public final ImmutableIntList deposits;
    public final double growth;
    public final int growthSpecies;
    public final int forcedGrowthSpecies;
    public final double popAssembly;
    public final int assemblingSpecies;
    public final int assemblingTemplate;
    public final int forcedAssemblingTemplate;
    public final int decline;
    public final double stability;
    public final double migration;
    public final double crime;
    public final int amenities;
    public final int amenitiesUsage;
    public final int freeAmenities;
    public final int freeHousing;
    public final int totalHousing;
    public final int housingUsage;
    public final int employablePops;
    public final int numSapientPops;
    public final String designation;
    public final String finalDesignation;
    public final ImmutableIntList species;
    public final ImmutableIntList enslavedSpecies;
    public final ImmutableBooleanList autoSlotsTaken;

    public Planet(IPdxScript s) {
        PdxScriptObject o = s.expectObject();
        this.name = o.getString("name");
        this.customName = o.getBoolean("custom_name", false);
        this.planetClass = o.getString("planet_class");
        this.entityPlanetClass = o.getString("entity_planet_class", null);
        this.coordinate = o.getObjectAs("coordinate", Coordinate::new);
        this.orbit = o.getDouble("orbit");
        this.planetSize = o.getInt("planet_size");
        this.bombardmentDamage = o.getInt("bombardment_damage");
        this.lastBombardment = o.getDate("last_bombardment");
        this.automatedDevelopment = o.getBoolean("automated_development");
        this.moons = o.getListAsEmptyOrIntList("moons");
        this.planetClassChanged = o.getBoolean("planet_class_changed", false);
        this.owner = o.getInt("owner", -1);
        this.branchOfficeOwner = o.getInt("branch_office_owner", -1);
        this.originalOwner = o.getInt("original_owner", -1);
        this.terraformedBy = o.getInt("terraformed_by", -1);
        this.controller = o.getInt("controller", -1);
        this.moonOf = o.getInt("moon_of", -1);
        this.isMoon = o.getBoolean("is_moon", false);
        this.hasRing = o.getBoolean("has_ring", false);
        this.anomaly = o.getString("anomaly", null);
        this.pops = o.getListAsEmptyOrIntList("pop");
        this.buildings = o.getListAsEmptyOrIntList("buildings");
        this.branchOfficeBuildings = o.getListAsEmptyOrIntList("branch_office_buildings");
        this.districts = o.getImplicitListAsStringList("district");
        this.lastBuildingChanged = o.getString("last_building_changed", null);
        this.lastDistrictChanged = o.getString("last_district_changed", null);
        this.is_under_colonization = o.getBoolean("is_under_colonization", false);
        this.colonizeDate = o.getDate("colonize_date", null);
        this.killPop = o.getDate("kill_pop");
        this.buildQueue = o.getInt("build_queue");
        this.armyBuildQueue = o.getInt("army_build_queue");
        this.branchOfficeBuildQueue = o.getInt("branch_office_build_queue");
        this.planetOrbitals = o.getObjectAsEmptyOrIntUnsignedIntMap("planet_orbitals");
        this.armies = o.getListAsEmptyOrIntList("army");
        this.delayedEvent = o.getObjectAsNullOr("delayed_event", DelayedEvent::new);
        this.timedModifiers = o.getImplicitListAsList("timed_modifier", TimedModifier::new);
        this.shipClassOrbitalStation = o.getInt("shipclass_orbital_station", -1);
        this.flags = o.getObjectAsEmptyOrStringObjectMap("flags", FlagData::of);
        this.entity = o.getInt("entity", -1);
        this.entityName = o.getString("entity_name", null);
        this.picture = o.getString("picture", null);
        this.isTerraformed = o.getBoolean("is_terraformed", false);
        this.terraformProcess = o.getObjectAsNullOr("terraform_process", TerraformProcess::new);
        this.planetModifiers = o.getImplicitListAsStringList("planet_modifier");
        this.surveyedBy = o.getInt("surveyed_by", -1);
        this.surveyed = o.getBoolean("surveyed", false);
        this.preventAnomaly = o.getBoolean("prevent_anomaly", false);
        this.triggerMegastructureIcon = o.getBoolean("trigger_megastructure_icon", false);
        this.deposits = o.getListAsEmptyOrIntList("deposits");
        this.growth = o.getDouble("growth", 0);
        this.growthSpecies = o.getInt("growth_species", -1);
        this.forcedGrowthSpecies = o.getInt("forced_growth_species", -1);
        this.popAssembly = o.getDouble("pop_assembly", 0);
        this.assemblingSpecies = o.getInt("assembling_species", -1);
        this.assemblingTemplate = o.getInt("assembling_template", -1);
        this.forcedAssemblingTemplate = o.getInt("forced_assembling_template", -1);
        this.decline = o.getInt("decline", -1);
        // TODO: job_priority, favorite_jobs
        this.stability = o.getDouble("stability");
        this.migration = o.getDouble("migration");
        this.crime = o.getDouble("crime");
        this.amenities = o.getInt("amenities");
        this.amenitiesUsage = o.getInt("amenities_usage");
        this.freeAmenities = o.getInt("free_amenities");
        this.freeHousing = o.getInt("free_housing");
        this.totalHousing = o.getInt("total_housing");
        this.housingUsage = o.getInt("housing_usage");
        this.employablePops = o.getInt("employable_pops");
        this.numSapientPops = o.getInt("num_sapient_pops");
        // TODO: jobs_cache
        this.designation = o.getString("designation", null);
        this.finalDesignation = o.getString("final_designation", null);
        this.species = o.getListAsEmptyOrIntList("species");
        this.enslavedSpecies = o.getListAsEmptyOrIntList("enslaved_species");
        // TODO: species_information
        this.autoSlotsTaken = o.getListAsBooleanList("auto_slots_taken");
    }
}
