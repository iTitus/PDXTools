plugins {
    id 'application'
    id 'org.beryx.jlink' version '3.1.3'
}

import org.gradle.internal.os.OperatingSystem

def lwjglNatives
switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty('os.arch')
        lwjglNatives = osArch.startsWith('arm') || osArch.startsWith('aarch64')
                ? "natives-linux-${osArch.contains('64') || osArch.startsWith('armv8') ? 'arm64' : 'arm32'}"
                : 'natives-linux'
        break
    case OperatingSystem.MAC_OS:
        lwjglNatives = System.getProperty('os.arch').startsWith('aarch64') ? 'natives-macos-arm64' : 'natives-macos'
        break
    case OperatingSystem.WINDOWS:
        def osArch = System.getProperty('os.arch')
        lwjglNatives = osArch.contains('64')
                ? "natives-windows${osArch.startsWith('aarch64') ? '-arm64' : ''}"
                : 'natives-windows-x86'
        break
}

application {
    mainModule = 'io.github.ititus.stellaris.lwjgl.viewer'
    mainClass = 'io.github.ititus.stellaris.lwjgl.viewer.Main'
}

dependencies {
    implementation project(':pdx-tools')
    implementation 'io.github.ititus:ddsiio:3.2.0'
    implementation 'io.github.ititus:ititus-commons:2.3.3'

    implementation 'org.eclipse.collections:eclipse-collections-api:13.0.0'
    implementation 'org.eclipse.collections:eclipse-collections:13.0.0'
    implementation 'org.eclipse.collections:eclipse-collections-forkjoin:13.0.0'

    // testImplementation 'org.eclipse.collections:eclipse-collections-testutils:13.0.0'

    implementation platform('org.lwjgl:lwjgl-bom:3.3.6')
    ['', '-assimp', '-glfw', '-openal', '-opengl', '-stb'].each {
        implementation "org.lwjgl:lwjgl${it}"
        implementation "org.lwjgl:lwjgl${it}::${lwjglNatives}"
    }

    implementation 'org.joml:joml:1.10.8'
}

jlink {
    options = ['--strip-debug', '--no-header-files', '--no-man-pages', '--ignore-signing-information']
    launcher {
        name = 'stellaris-viewer'
        jvmArgs = ['-Dorg.lwjgl.util.Debug=true', '-Dorg.lwjgl.util.DebugLoader=true']
    }
}
